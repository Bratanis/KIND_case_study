{
  "version": 4,
  "terraform_version": "1.12.1",
  "serial": 78,
  "lineage": "1dd08102-7c55-8754-024a-33898b352e04",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "ingress_nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress-nginx-test",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.12.2",
                "chart": "ingress-nginx",
                "first_deployed": 1748293414,
                "last_deployed": 1748293414,
                "name": "ingress-nginx-test",
                "namespace": "ingress-nginx-test",
                "notes": "The ingress-nginx controller has been installed.\nGet the application URL by running these commands:\n  export HTTP_NODE_PORT=$(kubectl get service --namespace ingress-nginx-test ingress-nginx-test-controller --output jsonpath=\"{.spec.ports[0].nodePort}\")\n  export HTTPS_NODE_PORT=$(kubectl get service --namespace ingress-nginx-test ingress-nginx-test-controller --output jsonpath=\"{.spec.ports[1].nodePort}\")\n  export NODE_IP=\"$(kubectl get nodes --output jsonpath=\"{.items[0].status.addresses[1].address}\")\"\n\n  echo \"Visit http://${NODE_IP}:${HTTP_NODE_PORT} to access your application via HTTP.\"\n  echo \"Visit https://${NODE_IP}:${HTTPS_NODE_PORT} to access your application via HTTPS.\"\n\nAn example Ingress that makes use of the controller:\n  apiVersion: networking.k8s.io/v1\n  kind: Ingress\n  metadata:\n    name: example\n    namespace: foo\n  spec:\n    ingressClassName: nginx\n    rules:\n      - host: www.example.com\n        http:\n          paths:\n            - pathType: Prefix\n              backend:\n                service:\n                  name: exampleService\n                  port:\n                    number: 80\n              path: /\n    # This section is only required if TLS is to be enabled for the Ingress\n    tls:\n      - hosts:\n        - www.example.com\n        secretName: example-tls\n\nIf TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:\n\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: example-tls\n    namespace: foo\n  data:\n    tls.crt: \u003cbase64 encoded cert\u003e\n    tls.key: \u003cbase64 encoded key\u003e\n  type: kubernetes.io/tls\n",
                "revision": 1,
                "values": "{\"controller\":{\"admissionWebhooks\":{\"enabled\":false},\"extraArgs\":{\"publish-status-address\":\"localhost\"},\"hostPort\":{\"enabled\":true},\"nodeSelector\":{\"ingress-ready\":\"true\"},\"publishService\":{\"enabled\":false},\"service\":{\"type\":\"NodePort\"},\"terminationGracePeriodSeconds\":0,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\",\"operator\":\"Equal\"}],\"watchIngressWithoutClass\":true}}",
                "version": "4.12.2"
              }
            ],
            "name": "ingress-nginx-test",
            "namespace": "ingress-nginx-test",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# nginx_ingress_values.yaml\n\ncontroller:\n  hostPort:\n    enabled: true\n  terminationGracePeriodSeconds: 0\n  service:\n    type: \"NodePort\"\n  watchIngressWithoutClass: true\n  nodeSelector:\n    ingress-ready: \"true\"\n  tolerations:\n  - effect: \"NoSchedule\"\n    key: \"node-role.kubernetes.io/master\"\n    operator: \"Equal\"\n  - effect: \"NoSchedule\"\n    key: \"node-role.kubernetes.io/control-plane\"\n    operator: \"Equal\"\n  publishService:\n    enabled: false\n  extraArgs:\n    publish-status-address: \"localhost\"\n  admissionWebhooks:\n    enabled: false\n"
            ],
            "verify": false,
            "version": "4.12.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kind_cluster.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kind_cluster",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/tehcyx/kind\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_certificate": "-----BEGIN CERTIFICATE-----\nMIIDKTCCAhGgAwIBAgIIMGVf83qKCS0wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA1MjYyMDU3MzRaFw0yNjA1MjYyMTAyMzRaMDwx\nHzAdBgNVBAoTFmt1YmVhZG06Y2x1c3Rlci1hZG1pbnMxGTAXBgNVBAMTEGt1YmVy\nbmV0ZXMtYWRtaW4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCDnmb\nE0RPetldNDPtqySu/IzakUMRHtRRfejq7226bNlmKJFVpBmJEjYoZgaIoaFRqGQ2\nYCVkovUGsc1PnPHszcagWH75HornF5J8cObJkti6xllEN17LwDciOU84zB6rA/LQ\n0984+xAmGzMAkRbk/cPOxVRT/03VmkEse97gRHrI0FSH4CMGLqB+ZZQYgFUnxqVY\n1Ka67JDVPRd6kN3f9eMDenhcPbZ833fFZzv97Sr0x3dkQGSBKJ8aM/fLHAEJPS6Q\nRvl2fJKC+U8Qzvy4bc2H97AhFXr15PVjfqKb+hAMU/+JFoZa8VWIhwMEVe5s72yA\n/nzye2NM+fb0AWVvAgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAK\nBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFDltIPyl2a1V2K4K\ngeUFuB9IPLKaMA0GCSqGSIb3DQEBCwUAA4IBAQBBydUt4eZOnDg17Zyxm/BmQk8Y\ny1Zck4KoTowy+DtX2CvvNHOxmFk4o8ByjQYStypqiU03ju7fzAjuTxLcX2Z2t/qR\n3pnVZVt7ugJ9g3tx6//wl06w6UsUgPnnhFa+uQVRNQszbuF9elTczC+/+jFQ9c8r\n9caEoYNcVA0SteCo0NiCni90m4j27eBoLspNCl7YfojnetyXxe95dIlwcwcgisFH\nw9S7May0aeRkc1EfVQrDK5ZwZIM+86fvWKPoDkO1fk8nXTHhF34mPaUk/nRelC5h\nRYlL7icrcxzZXft5sOu/uXsGBF29q9bYZgo/j6Z8vGD2N9mddiWBe044VFyU\n-----END CERTIFICATE-----\n",
            "client_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAwg55mxNET3rZXTQz7askrvyM2pFDER7UUX3o6u9tumzZZiiR\nVaQZiRI2KGYGiKGhUahkNmAlZKL1BrHNT5zx7M3GoFh++R6K5xeSfHDmyZLYusZZ\nRDdey8A3IjlPOMweqwPy0NPfOPsQJhszAJEW5P3DzsVUU/9N1ZpBLHve4ER6yNBU\nh+AjBi6gfmWUGIBVJ8alWNSmuuyQ1T0XepDd3/XjA3p4XD22fN93xWc7/e0q9Md3\nZEBkgSifGjP3yxwBCT0ukEb5dnySgvlPEM78uG3Nh/ewIRV69eT1Y36im/oQDFP/\niRaGWvFViIcDBFXubO9sgP588ntjTPn29AFlbwIDAQABAoIBAFsQ9epbUUxHJ2hA\nzjmzfeSMagFL+AA5yoNvpfVSZNj+qcryMLnS55TWsgmlT12hFBZBAr4twn6Gppv8\npo+85B8vtg2bWgLIXYDzI/A3/2YK/qAv4sZLgbX2PylVYaMSzzWMBdAQDYos77gi\nPX3/mJHfsJsBKYC9p6Yc3IbmnoH5b074SOLzWYB1KaI31w2DBc4ZkM4R7kOq3yTW\nItVRtAEIA847h0NJG62lgD6x5I6IMKj1/p5VE3o6yGmR2WtHF2YQy/9xIDr0YCvm\nUVRwPuB4YLjDd/Hxubm+BQPJYWNsXP0eI54aWU6NA0v4XzmTAM1Q/0hYAyynt58R\nEl1/VQECgYEA7dPd+0ac1oeyBxyIicqKkmoU/ReOryZ4dDXj3gOwkGtH6mg/emv+\nD8blv+UTKHUk3DV92nqU4wSDnpxsMBWVAecpMsZVePeI6U9/4HVeIR2sQ+SBk/M+\nh059eOBMOQqkgXdq8Q/i5IB8nKVg+B2S11L+I+kH6k+ljFj8Q5nHqIECgYEA0OJn\njteICIxQv5PHEkR8oSDWFUzpiUrPs2DNAO7tNc02PgIxlPWqFIvMCbK2a6WkslL9\nIwyEIJP9oyLsY3ShXogNSmfWYrRE81sgBg/JbeYGxhoO2MkmFuBmVvcYTItI6v0y\n5kzvjE3BWDKV+udGuHCakayWVAB6wf7UyymIle8CgYBfkTZvRZW6gzafsvCO5iu+\n4A/lD/VPHpdio1EYosTtk56HbDKt3/1sm5ExBj0nkcMpFfmntIBlpSe6scKro9CH\nvjsI4zfvbxC+KCsLqD4V8pWJhqYnLKSgvIKg8wjOFx+5wqHfknGrPpJUZAROT5v1\nGK11AqwilLTCa/Oauo3HgQKBgH0Ab/6QRqzu40eyNLhe2cJG9zZp/3uUlHUBIc1E\nLho7QxGamHdPCEghXKoVE4uZ5dR9S1UVIWCpj2h39sSRwBvlCScUurv4qyaCysg1\n3FHzDOyyHV5oCW45PaUfW6A63hkaCsK9GcF5qpGQPCaZDr5DTIyOnquIWe4MBOXL\nZhxrAoGAN3nlQ+QgHMP4Hd9YnJpdjynsxS/O5kGGB+ApjDEnOle5lcD7s+QynhHv\nbv2sNW0JQnQCqlhCog6N66xXsJvd2vTVw3YRjwZ2nOUc5tnDEH99NIzNoZ/B/rkW\nEdugTiO//hA0XFIELTsGd3C0CVwDSgqLJlXpb198UgVpyowIpdg=\n-----END RSA PRIVATE KEY-----\n",
            "cluster_ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIZRbVpgC6SfQwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA1MjYyMDU3MzRaFw0zNTA1MjQyMTAyMzRaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQC/euGMQLzJauNJyGO9YejZyEZGdKm5WP96KtXy6LReH8AHJ/yE9wYSxGj3\nk33j2dV/NqSnb7MJdILBg2gQiV3Qlsg0iO3yfGpsDKJ8s8XHkAWpXMLUOcDW50Ws\nWsoXDUyX0mt/K8uG5MLlCs1lNftx4dr0Vad7BerEVyflzqMEUCcRzMjaDHrq7j9/\nb+ESn+XLvRWUtpC8IEtbmvXqnurompCN8b6fN8HppiRe0u0ZfJyQaQohKis47Dzs\nQiuIxsv1YzY6S2Cz03J4rvCaKWYAib43/XB8Dtc7KCa4eIX/N52IIVGdiH8dqaRQ\nAaymJOMh0SK3Ddx9cv2dC7EiFCNDAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQ5bSD8pdmtVdiuCoHlBbgfSDyymjAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBLs0PoH9EE\ndBeVgPy3yT9z6ZXQQ+pmPvB+cF8PBaHvWfGQ286q+8UsaL9ySA/bwQ75t6dZsJ0t\n88mtXDe5eRj1fzJb5ZXcr9ymZioEDx3ANhJcYvpWsxZ4cx3jVkjE98WsV9/FZ3jx\nYyXdROXXzhvtUxct6pBw0SMSJTP+kW17GrkkTG/gmVa0XM5H7orVHQyFOQeZnDKJ\ndmVr7B1cZJxOxR/ZBv3bIHswFcSYTjotmpp14/oCPfAomWwVPwD9d92o9J2Hg631\nAmiYm0fmII1sIDrDw7qIM1TZcO4PwJHvwP+Azyg33GCTuFvc4gDgLILdoW42vBA9\nbtCN5UGKstne\n-----END CERTIFICATE-----\n",
            "completed": true,
            "endpoint": "https://127.0.0.1:37959",
            "id": "demo-clicker-cluster-test-",
            "kind_config": [
              {
                "api_version": "kind.x-k8s.io/v1alpha4",
                "containerd_config_patches": [],
                "feature_gates": {},
                "kind": "Cluster",
                "networking": [],
                "node": [
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [
                      {
                        "container_port": 80,
                        "host_port": 8080,
                        "listen_address": "",
                        "protocol": ""
                      },
                      {
                        "container_port": 443,
                        "host_port": 8443,
                        "listen_address": "",
                        "protocol": ""
                      }
                    ],
                    "image": "",
                    "kubeadm_config_patches": [
                      "kind: InitConfiguration\nnodeRegistration:\n  kubeletExtraArgs:\n    node-labels: \"ingress-ready=true\"\n"
                    ],
                    "labels": {},
                    "role": "control-plane"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": [],
                    "labels": {},
                    "role": "worker"
                  }
                ],
                "runtime_config": {}
              }
            ],
            "kubeconfig": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJWlJiVnBnQzZTZlF3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMU1qWXlNRFUzTXpSYUZ3MHpOVEExTWpReU1UQXlNelJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUMvZXVHTVFMekphdU5KeUdPOVllalp5RVpHZEttNVdQOTZLdFh5NkxSZUg4QUhKL3lFOXdZU3hHajMKazMzajJkVi9OcVNuYjdNSmRJTEJnMmdRaVYzUWxzZzBpTzN5Zkdwc0RLSjhzOFhIa0FXcFhNTFVPY0RXNTBXcwpXc29YRFV5WDBtdC9LOHVHNU1MbENzMWxOZnR4NGRyMFZhZDdCZXJFVnlmbHpxTUVVQ2NSek1qYURIcnE3ajkvCmIrRVNuK1hMdlJXVXRwQzhJRXRibXZYcW51cm9tcENOOGI2Zk44SHBwaVJlMHUwWmZKeVFhUW9oS2lzNDdEenMKUWl1SXhzdjFZelk2UzJDejAzSjRydkNhS1dZQWliNDMvWEI4RHRjN0tDYTRlSVgvTjUySUlWR2RpSDhkcWFSUQpBYXltSk9NaDBTSzNEZHg5Y3YyZEM3RWlGQ05EQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRNWJTRDhwZG10VmRpdUNvSGxCYmdmU0R5eW1qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkxzMFBvSDlFRQpkQmVWZ1B5M3lUOXo2WlhRUStwbVB2QitjRjhQQmFIdldmR1EyODZxKzhVc2FMOXlTQS9id1E3NXQ2ZFpzSjB0Cjg4bXRYRGU1ZVJqMWZ6SmI1Wlhjcjl5bVppb0VEeDNBTmhKY1l2cFdzeFo0Y3gzalZrakU5OFdzVjkvRlozangKWXlYZFJPWFh6aHZ0VXhjdDZwQncwU01TSlRQK2tXMTdHcmtrVEcvZ21WYTBYTTVIN29yVkhReUZPUWVabkRLSgpkbVZyN0IxY1pKeE94Ui9aQnYzYklIc3dGY1NZVGpvdG1wcDE0L29DUGZBb21Xd1ZQd0Q5ZDkybzlKMkhnNjMxCkFtaVltMGZtSUkxc0lEckR3N3FJTTFUWmNPNFB3Skh2d1ArQXp5ZzMzR0NUdUZ2YzRnRGdMSUxkb1c0MnZCQTkKYnRDTjVVR0tzdG5lCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://127.0.0.1:37959\n  name: kind-demo-clicker-cluster-test\ncontexts:\n- context:\n    cluster: kind-demo-clicker-cluster-test\n    user: kind-demo-clicker-cluster-test\n  name: kind-demo-clicker-cluster-test\ncurrent-context: kind-demo-clicker-cluster-test\nkind: Config\npreferences: {}\nusers:\n- name: kind-demo-clicker-cluster-test\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJTUdWZjgzcUtDUzB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMU1qWXlNRFUzTXpSYUZ3MHlOakExTWpZeU1UQXlNelJhTUR3eApIekFkQmdOVkJBb1RGbXQxWW1WaFpHMDZZMngxYzNSbGNpMWhaRzFwYm5NeEdUQVhCZ05WQkFNVEVHdDFZbVZ5CmJtVjBaWE10WVdSdGFXNHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQ0RubWIKRTBSUGV0bGRORFB0cXlTdS9JemFrVU1SSHRSUmZlanE3MjI2Yk5sbUtKRlZwQm1KRWpZb1pnYUlvYUZScUdRMgpZQ1Zrb3ZVR3NjMVBuUEhzemNhZ1dINzVIb3JuRjVKOGNPYkprdGk2eGxsRU4xN0x3RGNpT1U4NHpCNnJBL0xRCjA5ODQreEFtR3pNQWtSYmsvY1BPeFZSVC8wM1Zta0VzZTk3Z1JIckkwRlNINENNR0xxQitaWlFZZ0ZVbnhxVlkKMUthNjdKRFZQUmQ2a04zZjllTURlbmhjUGJaODMzZkZaenY5N1NyMHgzZGtRR1NCS0o4YU0vZkxIQUVKUFM2UQpSdmwyZkpLQytVOFF6dnk0YmMySDk3QWhGWHIxNVBWamZxS2IraEFNVS8rSkZvWmE4VldJaHdNRVZlNXM3MnlBCi9uenllMk5NK2ZiMEFXVnZBZ01CQUFHalZqQlVNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUsKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkRsdElQeWwyYTFWMks0SwpnZVVGdUI5SVBMS2FNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJCeWRVdDRlWk9uRGcxN1p5eG0vQm1RazhZCnkxWmNrNEtvVG93eStEdFgyQ3Z2TkhPeG1GazRvOEJ5alFZU3R5cHFpVTAzanU3ZnpBanVUeExjWDJaMnQvcVIKM3BuVlpWdDd1Z0o5ZzN0eDYvL3dsMDZ3NlVzVWdQbm5oRmErdVFWUk5Rc3pidUY5ZWxUY3pDKy8rakZROWM4cgo5Y2FFb1lOY1ZBMFN0ZUNvME5pQ25pOTBtNGoyN2VCb0xzcE5DbDdZZm9qbmV0eVh4ZTk1ZElsd2N3Y2dpc0ZICnc5UzdNYXkwYWVSa2MxRWZWUXJESzVad1pJTSs4NmZ2V0tQb0RrTzFmazhuWFRIaEYzNG1QYVVrL25SZWxDNWgKUllsTDdpY3JjeHpaWGZ0NXNPdS91WHNHQkYyOXE5YllaZ28vajZaOHZHRDJOOW1kZGlXQmUwNDRWRnlVCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBd2c1NW14TkVUM3JaWFRRejdhc2tydnlNMnBGREVSN1VVWDNvNnU5dHVtelpaaWlSClZhUVppUkkyS0dZR2lLR2hVYWhrTm1BbFpLTDFCckhOVDV6eDdNM0dvRmgrK1I2SzV4ZVNmSERteVpMWXVzWloKUkRkZXk4QTNJamxQT013ZXF3UHkwTlBmT1BzUUpoc3pBSkVXNVAzRHpzVlVVLzlOMVpwQkxIdmU0RVI2eU5CVQpoK0FqQmk2Z2ZtV1VHSUJWSjhhbFdOU211dXlRMVQwWGVwRGQzL1hqQTNwNFhEMjJmTjkzeFdjNy9lMHE5TWQzClpFQmtnU2lmR2pQM3l4d0JDVDB1a0ViNWRueVNndmxQRU03OHVHM05oL2V3SVJWNjllVDFZMzZpbS9vUURGUC8KaVJhR1d2RlZpSWNEQkZYdWJPOXNnUDU4OG50alRQbjI5QUZsYndJREFRQUJBb0lCQUZzUTllcGJVVXhISjJoQQp6am16ZmVTTWFnRkwrQUE1eW9OdnBmVlNaTmorcWNyeU1MblM1NVRXc2dtbFQxMmhGQlpCQXI0dHduNkdwcHY4CnBvKzg1Qjh2dGcyYldnTElYWUR6SS9BMy8yWUsvcUF2NHNaTGdiWDJQeWxWWWFNU3p6V01CZEFRRFlvczc3Z2kKUFgzL21KSGZzSnNCS1lDOXA2WWMzSWJtbm9INWIwNzRTT0x6V1lCMUthSTMxdzJEQmM0WmtNNFI3a09xM3lUVwpJdFZSdEFFSUE4NDdoME5KRzYybGdENng1STZJTUtqMS9wNVZFM282eUdtUjJXdEhGMllReS85eElEcjBZQ3ZtClVWUndQdUI0WUxqRGQvSHh1Ym0rQlFQSllXTnNYUDBlSTU0YVdVNk5BMHY0WHptVEFNMVEvMGhZQXl5bnQ1OFIKRWwxL1ZRRUNnWUVBN2RQZCswYWMxb2V5Qnh5SWljcUtrbW9VL1JlT3J5WjRkRFhqM2dPd2tHdEg2bWcvZW12KwpEOGJsditVVEtIVWszRFY5Mm5xVTR3U0RucHhzTUJXVkFlY3BNc1pWZVBlSTZVOS80SFZlSVIyc1ErU0JrL00rCmgwNTllT0JNT1Fxa2dYZHE4US9pNUlCOG5LVmcrQjJTMTFMK0kra0g2aytsakZqOFE1bkhxSUVDZ1lFQTBPSm4KanRlSUNJeFF2NVBIRWtSOG9TRFdGVXpwaVVyUHMyRE5BTzd0TmMwMlBnSXhsUFdxRkl2TUNiSzJhNldrc2xMOQpJd3lFSUpQOW95THNZM1NoWG9nTlNtZldZclJFODFzZ0JnL0piZVlHeGhvTzJNa21GdUJtVnZjWVRJdEk2djB5CjVrenZqRTNCV0RLVit1ZEd1SENha2F5V1ZBQjZ3ZjdVeXltSWxlOENnWUJma1RadlJaVzZnemFmc3ZDTzVpdSsKNEEvbEQvVlBIcGRpbzFFWW9zVHRrNTZIYkRLdDMvMXNtNUV4QmowbmtjTXBGZm1udElCbHBTZTZzY0tybzlDSAp2anNJNHpmdmJ4QytLQ3NMcUQ0VjhwV0pocVluTEtTZ3ZJS2c4d2pPRngrNXdxSGZrbkdyUHBKVVpBUk9UNXYxCkdLMTFBcXdpbExUQ2EvT2F1bzNIZ1FLQmdIMEFiLzZRUnF6dTQwZXlOTGhlMmNKRzl6WnAvM3VVbEhVQkljMUUKTGhvN1F4R2FtSGRQQ0VnaFhLb1ZFNHVaNWRSOVMxVVZJV0NwajJoMzlzU1J3QnZsQ1NjVXVydjRxeWFDeXNnMQozRkh6RE95eUhWNW9DVzQ1UGFVZlc2QTYzaGthQ3NLOUdjRjVxcEdRUENhWkRyNURUSXlPbnF1SVdlNE1CT1hMClpoeHJBb0dBTjNubFErUWdITVA0SGQ5WW5KcGRqeW5zeFMvTzVrR0dCK0FwakRFbk9sZTVsY0Q3cytReW5oSHYKYnYyc05XMEpRblFDcWxoQ29nNk42NnhYc0p2ZDJ2VFZ3M1lSandaMm5PVWM1dG5ERUg5OU5Jek5vWi9CL3JrVwpFZHVnVGlPLy9oQTBYRklFTFRzR2QzQzBDVndEU2dxTEpsWHBiMTk4VWdWcHlvd0lwZGc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\n",
            "kubeconfig_path": "/home/kotkokos/.kube/config-test",
            "name": "demo-clicker-cluster-test",
            "node_image": null,
            "timeouts": null,
            "wait_for_ready": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "demo-clicker-test/demo-clicker-deployment-test",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": null,
                "name": "demo-clicker-deployment-test",
                "namespace": "demo-clicker-test",
                "resource_version": "827",
                "uid": "4d57498e-5dbf-48ea-a7da-beab45a76751"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "2",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "demo-clicker-test"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "demo-clicker-test",
                          "environment": "test"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": null,
                            "env": [
                              {
                                "name": "MANAGEMENT_SERVER_PORT",
                                "value": "8081",
                                "value_from": []
                              },
                              {
                                "name": "MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE",
                                "value": "health",
                                "value_from": []
                              },
                              {
                                "name": "MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS",
                                "value": "never",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "demo-clicker:test",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/actuator/health",
                                    "port": "8081",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 30,
                                "period_seconds": 30,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "name": "demo-clicker",
                            "port": [
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "http",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 8081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "management",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/actuator/health",
                                    "port": "8081",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 5,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "500m",
                                  "memory": "1Gi"
                                },
                                "requests": {
                                  "cpu": "100m",
                                  "memory": "512Mi"
                                }
                              }
                            ],
                            "security_context": [
                              {
                                "allow_privilege_escalation": false,
                                "capabilities": [],
                                "privileged": false,
                                "read_only_root_filesystem": false,
                                "run_as_group": "",
                                "run_as_non_root": true,
                                "run_as_user": "",
                                "se_linux_options": [],
                                "seccomp_profile": []
                              }
                            ],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "demo-clicker-test/demo-clicker-ingress-test",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": null,
                "name": "demo-clicker-ingress-test",
                "namespace": "demo-clicker-test",
                "resource_version": "631",
                "uid": "2f27d1fe-96c8-4ffd-9949-8b68cb3d4c86"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "test.localhost",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "demo-clicker-test",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 80
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/",
                            "path_type": "Prefix"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "demo-clicker-test",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "demo-clicker-test",
                "resource_version": "627",
                "uid": "88889fc0-832c-41ca-aa02-46e6e6be6964"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "demo-clicker-test/demo-clicker-test",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "demo-clicker-test",
                "namespace": "demo-clicker-test",
                "resource_version": "640",
                "uid": "40cd8b48-0013-4e30-b76d-c15367605bf2"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.96.49.128",
                "cluster_ips": [
                  "10.96.49.128"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "http",
                    "node_port": 0,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "8080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "demo-clicker-test"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "management",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "demo-clicker-test/demo-clicker-management-test",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "demo-clicker-management-test",
                "namespace": "demo-clicker-test",
                "resource_version": "634",
                "uid": "815d8762-89d0-4634-aca7-60e917a0bc59"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.96.141.215",
                "cluster_ips": [
                  "10.96.141.215"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "management",
                    "node_port": 0,
                    "port": 8081,
                    "protocol": "TCP",
                    "target_port": "8081"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "demo-clicker-test"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "load_docker_image",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6897676760454140354",
            "triggers": {
              "cluster_id": "demo-clicker-cluster-test-",
              "image_tag": "test"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "kind_cluster.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "wait_for_ingress_nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1900089946356041241",
            "triggers": {
              "key": "e5bd0779-7faf-9d84-ea2f-1689157760f6"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
