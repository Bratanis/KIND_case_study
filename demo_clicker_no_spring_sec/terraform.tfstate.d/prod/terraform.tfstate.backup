{
  "version": 4,
  "terraform_version": "1.12.1",
  "serial": 71,
  "lineage": "9787e54c-fde0-a760-11cc-258381088f40",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "ingress_nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress-nginx-prod",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.12.2",
                "chart": "ingress-nginx",
                "first_deployed": 1748296415,
                "last_deployed": 1748296415,
                "name": "ingress-nginx-prod",
                "namespace": "ingress-nginx-prod",
                "notes": "The ingress-nginx controller has been installed.\nGet the application URL by running these commands:\n  export HTTP_NODE_PORT=$(kubectl get service --namespace ingress-nginx-prod ingress-nginx-prod-controller --output jsonpath=\"{.spec.ports[0].nodePort}\")\n  export HTTPS_NODE_PORT=$(kubectl get service --namespace ingress-nginx-prod ingress-nginx-prod-controller --output jsonpath=\"{.spec.ports[1].nodePort}\")\n  export NODE_IP=\"$(kubectl get nodes --output jsonpath=\"{.items[0].status.addresses[1].address}\")\"\n\n  echo \"Visit http://${NODE_IP}:${HTTP_NODE_PORT} to access your application via HTTP.\"\n  echo \"Visit https://${NODE_IP}:${HTTPS_NODE_PORT} to access your application via HTTPS.\"\n\nAn example Ingress that makes use of the controller:\n  apiVersion: networking.k8s.io/v1\n  kind: Ingress\n  metadata:\n    name: example\n    namespace: foo\n  spec:\n    ingressClassName: nginx\n    rules:\n      - host: www.example.com\n        http:\n          paths:\n            - pathType: Prefix\n              backend:\n                service:\n                  name: exampleService\n                  port:\n                    number: 80\n              path: /\n    # This section is only required if TLS is to be enabled for the Ingress\n    tls:\n      - hosts:\n        - www.example.com\n        secretName: example-tls\n\nIf TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:\n\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: example-tls\n    namespace: foo\n  data:\n    tls.crt: \u003cbase64 encoded cert\u003e\n    tls.key: \u003cbase64 encoded key\u003e\n  type: kubernetes.io/tls\n",
                "revision": 1,
                "values": "{\"controller\":{\"admissionWebhooks\":{\"enabled\":false},\"extraArgs\":{\"publish-status-address\":\"localhost\"},\"hostPort\":{\"enabled\":true},\"nodeSelector\":{\"ingress-ready\":\"true\"},\"publishService\":{\"enabled\":false},\"service\":{\"type\":\"NodePort\"},\"terminationGracePeriodSeconds\":0,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\",\"operator\":\"Equal\"}],\"watchIngressWithoutClass\":true}}",
                "version": "4.12.2"
              }
            ],
            "name": "ingress-nginx-prod",
            "namespace": "ingress-nginx-prod",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# nginx_ingress_values.yaml\n\ncontroller:\n  hostPort:\n    enabled: true\n  terminationGracePeriodSeconds: 0\n  service:\n    type: \"NodePort\"\n  watchIngressWithoutClass: true\n  nodeSelector:\n    ingress-ready: \"true\"\n  tolerations:\n  - effect: \"NoSchedule\"\n    key: \"node-role.kubernetes.io/master\"\n    operator: \"Equal\"\n  - effect: \"NoSchedule\"\n    key: \"node-role.kubernetes.io/control-plane\"\n    operator: \"Equal\"\n  publishService:\n    enabled: false\n  extraArgs:\n    publish-status-address: \"localhost\"\n  admissionWebhooks:\n    enabled: false\n"
            ],
            "verify": false,
            "version": "4.12.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kind_cluster.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kind_cluster",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/tehcyx/kind\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_certificate": "-----BEGIN CERTIFICATE-----\nMIIDKTCCAhGgAwIBAgIIC8ddO4RxCj8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA1MjYyMTQ3MjlaFw0yNjA1MjYyMTUyMjlaMDwx\nHzAdBgNVBAoTFmt1YmVhZG06Y2x1c3Rlci1hZG1pbnMxGTAXBgNVBAMTEGt1YmVy\nbmV0ZXMtYWRtaW4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC0U81m\nOzh3GvUuuhoazSAqhGcZeR2ctOIDxzdFLEveN7zfrZTFN7nGteVqUgSfojUuMVya\nSsZjjFlk8hYWyrdfXNmEyiERbaJjjFBYBAdfyqh2VIV0KWrZvdOzXmmBBfAt8iKa\nQ5hec87XfIDFPO8p28H31SHC+tXaMllLWEaaNPJlt7EHZvbKGvYohmLqvGqJyFdf\nIpKXNHiafnh3SjucXudNxopbPu1a5Pw4+iHp6gmNEfc/D+Zknj040uYfO6Qi54PM\nuZaxDuTD7+oHud8oyIDFvoLKSIgq+dGrXjL84ezqyeqvCLlIFqYeS4IANiXEzotl\n9gouRL0MqbpPE/ydAgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAK\nBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFAEKUdcYXAcoYj8P\nVTuRY9VRTY8KMA0GCSqGSIb3DQEBCwUAA4IBAQBdVvtNpOofFgld8NEgira5xSQs\nlA6MF4NVOx88eyvuSrumzMUytJAdqDZbOpwfYpVHHFJgkiTwBX3qD008T/q3wTlZ\ntbyHJRuckQtOYVuoQ33Cj3InCAJ1dRoIL1UsZolZesayllPNiBIEILeB5fhJH76i\nNY7oe8CyYJGDHdstcLm6EJyzkF41m0VhIYFfFB3oNPkCx3Xv2If09KJlC28rn6G/\nF3s3bitLWj8a84C2JmRyYyI4c+QlwQ8VOox8RxZRI42/YKg8+lmy2rcELyGMfkpd\nVMS2kq/m3FTrB3R4PxHvJIlYx7Buyajyw7S8KC+vZZQeQqKw6MotcpweI3di\n-----END CERTIFICATE-----\n",
            "client_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAtFPNZjs4dxr1LroaGs0gKoRnGXkdnLTiA8c3RSxL3je8362U\nxTe5xrXlalIEn6I1LjFcmkrGY4xZZPIWFsq3X1zZhMohEW2iY4xQWAQHX8qodlSF\ndClq2b3Ts15pgQXwLfIimkOYXnPO13yAxTzvKdvB99UhwvrV2jJZS1hGmjTyZbex\nB2b2yhr2KIZi6rxqichXXyKSlzR4mn54d0o7nF7nTcaKWz7tWuT8OPoh6eoJjRH3\nPw/mZJ49ONLmHzukIueDzLmWsQ7kw+/qB7nfKMiAxb6CykiIKvnRq14y/OHs6snq\nrwi5SBamHkuCADYlxM6LZfYKLkS9DKm6TxP8nQIDAQABAoIBABuf7eqgHl+Sq+ZX\nYKnj7C5PP7sVhI2N4UTqZyNr7IhzmfXbMdv/lDBmi6lcvLQWxZZYvgKt+1PjO4ud\nEXi2394WS4VN8MBqfvLIm0NMhLOuSF3uR057DNEkBTMofrmjBv8G5bmjqssnaxO0\nUUbF9a6AKagViLlFs26cgXTrJk+3lGBkvrMEB6fzYAJCwS6PuuIGaBP7qADUPnZq\nQ1Wk05FIzIQECG7ocmXL1ubGSlsCjZ2haaiT8jzXcMRlBB7takaxmOTrKYCC8meg\nMzZdCjHxzMsxpoMj3GZU7hTuC97W4GevNm97RxLiN3UXaKuOUFvY8MOtet4u7+E2\nnSllsOECgYEA0AMiKcgjZpWeVfFD29TU6/kBcr9cASJjiftabIgN8VqC/3IINnue\nge7g9Cxo/LxrWdqb/3HREgd6F3Dl++J7CkFQKBtPrTXHH/QnsLLTEUjrcBwrNYkt\ntgJMgBcd2mEwbE3Esi7Vi9oapFcqrnYgLsn5F94mc+8s+/5m96+COuECgYEA3e2k\n67YlP1Yp0e2qAKyVmb2W/B+6bmIgLktIY3lGUYJAu4B4RxzsDBOJKUO41kBy9cnH\nUgXF85lE0kILQgsXw1U2MX+tW6QUWLb03q0M4oqgyV5MZ2byr1+zePCZCRZSooTE\np7OoOKAz9Hw10vxW2SYPIfubU4ZsgO3da0inlT0CgYBR7FoBIJyoo1aHvIygQLNW\n+GvUmH8Qx01yo3badb8gBii/mFaZtpgXzk/0eqUinMaezdVQhq/zrNQt9T3utSUG\nRfDeytrXee2hrRQQqG0uSozHS6DM5ekF3OPqMrCEOHDMxtgn4QAjo1OI0/ewXD+S\njeM3vjtgv5r06B3/gLUGoQKBgQCsWy4kahfPcsmT4nKPh3nAJwAl2zZdGBRKH+me\nZ8d28iP3+zRudkXUsy9pPtFEhFVEEmuchiNQpw5OBUDdD+RqrbkjBDfM3kd3BtBy\nSA+juWpaOcQ44jlEfpzSJnmUFyQiV96rJ9pT8AeprvXWYGfKycYi7FebrOCD2TiH\nY6vTOQKBgC47WDPU/6IVU65Mp6mjJMH3PZZxm7PnZ5resFc5AI+KiTx+dakEw5oM\n9eSWF+UX/WW/1xf6heigWgwWYNutkj0kikPFj6UY63q981jTAqTUZkHBLXrp+p7z\n5/90bGu7TA+YDSnYL9wIxckIL8WqJCOmuS4lOlabtRK6/D/wlrWj\n-----END RSA PRIVATE KEY-----\n",
            "cluster_ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIanj1timKQMkwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA1MjYyMTQ3MjlaFw0zNTA1MjQyMTUyMjlaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDRo3K8mtVMmVP9AN6meAbWu3GzuFyMHroxWbIefTUHmM0xWzxz4MiBRE1B\nQscf5ZzfafBE3JuvHHVhAwFG+irdBFtK0d/nXw/+ZVFyYSz8DtsZwDdz5nQqQcyC\nn4UvXxwCiC9WVOEcTMtRqoOEjR1UkUrtaq68nNcpmbZo94Yr8hbHeRxRU+r/5q79\nUxPRdAl6pxURytErx1dOt5WxrFluV8xMZUspIHurZzLvLb3DdHBel3GXqoDsfs7E\n1swV4bJyFlhJLuKeJVJX2EPB2brZ4ZYzMnnKWZUnXcWabLV+exilDHOp7hxxiZEz\n1AArodc+x4DclZJif7dOjKhB1f3hAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQBClHXGFwHKGI/D1U7kWPVUU2PCjAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDQ3Ls9azUJ\nXPwexN9+Ae+7SJxWpZn7ZtMPGegLN8QqWWQOXpxyeISpdaYc8UTgjgAsj8im7oDX\nwMDCEXBmCR9xhFJ7S72zY39EOykpCiiMWV0mcFidfmNGXFK5dpcrhRj2rnvvuonY\npL0nE0KQR8kc5x+iytqCTXVT5PZpiuUR3g7fBN4lD6SM2ZwIRV9rRpjSCgBlyh5n\nWuM4CruWSkJWIXI3F/YuTgLK+0U9v1J5aeXXPbk8Ddas413485fVWl7DB7E0Jr1/\njhC5pthygTeiqvjQKM1usCMYZy86N1RCx6IgN/V4Zc69Bi1s5rSDDGBPvNrapdct\n59auzuceuIAL\n-----END CERTIFICATE-----\n",
            "completed": true,
            "endpoint": "https://127.0.0.1:45959",
            "id": "demo-clicker-cluster-prod-",
            "kind_config": [
              {
                "api_version": "kind.x-k8s.io/v1alpha4",
                "containerd_config_patches": [],
                "feature_gates": {},
                "kind": "Cluster",
                "networking": [],
                "node": [
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [
                      {
                        "container_port": 80,
                        "host_port": 80,
                        "listen_address": "",
                        "protocol": ""
                      },
                      {
                        "container_port": 443,
                        "host_port": 443,
                        "listen_address": "",
                        "protocol": ""
                      }
                    ],
                    "image": "",
                    "kubeadm_config_patches": [
                      "kind: InitConfiguration\nnodeRegistration:\n  kubeletExtraArgs:\n    node-labels: \"ingress-ready=true\"\n"
                    ],
                    "labels": {},
                    "role": "control-plane"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": [],
                    "labels": {},
                    "role": "worker"
                  }
                ],
                "runtime_config": {}
              }
            ],
            "kubeconfig": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJYW5qMXRpbUtRTWt3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMU1qWXlNVFEzTWpsYUZ3MHpOVEExTWpReU1UVXlNamxhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURSbzNLOG10Vk1tVlA5QU42bWVBYld1M0d6dUZ5TUhyb3hXYkllZlRVSG1NMHhXenh6NE1pQlJFMUIKUXNjZjVaemZhZkJFM0p1dkhIVmhBd0ZHK2lyZEJGdEswZC9uWHcvK1pWRnlZU3o4RHRzWndEZHo1blFxUWN5QwpuNFV2WHh3Q2lDOVdWT0VjVE10UnFvT0VqUjFVa1VydGFxNjhuTmNwbWJabzk0WXI4aGJIZVJ4UlUrci81cTc5ClV4UFJkQWw2cHhVUnl0RXJ4MWRPdDVXeHJGbHVWOHhNWlVzcElIdXJaekx2TGIzRGRIQmVsM0dYcW9Ec2ZzN0UKMXN3VjRiSnlGbGhKTHVLZUpWSlgyRVBCMmJyWjRaWXpNbm5LV1pVblhjV2FiTFYrZXhpbERIT3A3aHh4aVpFegoxQUFyb2RjK3g0RGNsWkppZjdkT2pLaEIxZjNoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRQkNsSFhHRndIS0dJL0QxVTdrV1BWVVUyUENqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRRFEzTHM5YXpVSgpYUHdleE45K0FlKzdTSnhXcFpuN1p0TVBHZWdMTjhRcVdXUU9YcHh5ZUlTcGRhWWM4VVRnamdBc2o4aW03b0RYCndNRENFWEJtQ1I5eGhGSjdTNzJ6WTM5RU95a3BDaWlNV1YwbWNGaWRmbU5HWEZLNWRwY3JoUmoycm52dnVvblkKcEwwbkUwS1FSOGtjNXgraXl0cUNUWFZUNVBacGl1VVIzZzdmQk40bEQ2U00yWndJUlY5clJwalNDZ0JseWg1bgpXdU00Q3J1V1NrSldJWEkzRi9ZdVRnTEsrMFU5djFKNWFlWFhQYms4RGRhczQxMzQ4NWZWV2w3REI3RTBKcjEvCmpoQzVwdGh5Z1RlaXF2alFLTTF1c0NNWVp5ODZOMVJDeDZJZ04vVjRaYzY5QmkxczVyU0RER0JQdk5yYXBkY3QKNTlhdXp1Y2V1SUFMCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://127.0.0.1:45959\n  name: kind-demo-clicker-cluster-prod\ncontexts:\n- context:\n    cluster: kind-demo-clicker-cluster-prod\n    user: kind-demo-clicker-cluster-prod\n  name: kind-demo-clicker-cluster-prod\ncurrent-context: kind-demo-clicker-cluster-prod\nkind: Config\npreferences: {}\nusers:\n- name: kind-demo-clicker-cluster-prod\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJQzhkZE80UnhDajh3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMU1qWXlNVFEzTWpsYUZ3MHlOakExTWpZeU1UVXlNamxhTUR3eApIekFkQmdOVkJBb1RGbXQxWW1WaFpHMDZZMngxYzNSbGNpMWhaRzFwYm5NeEdUQVhCZ05WQkFNVEVHdDFZbVZ5CmJtVjBaWE10WVdSdGFXNHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDMFU4MW0KT3poM0d2VXV1aG9helNBcWhHY1plUjJjdE9JRHh6ZEZMRXZlTjd6ZnJaVEZON25HdGVWcVVnU2ZvalV1TVZ5YQpTc1pqakZsazhoWVd5cmRmWE5tRXlpRVJiYUpqakZCWUJBZGZ5cWgyVklWMEtXclp2ZE96WG1tQkJmQXQ4aUthClE1aGVjODdYZklERlBPOHAyOEgzMVNIQyt0WGFNbGxMV0VhYU5QSmx0N0VIWnZiS0d2WW9obUxxdkdxSnlGZGYKSXBLWE5IaWFmbmgzU2p1Y1h1ZE54b3BiUHUxYTVQdzQraUhwNmdtTkVmYy9EK1prbmowNDB1WWZPNlFpNTRQTQp1WmF4RHVURDcrb0h1ZDhveUlERnZvTEtTSWdxK2RHclhqTDg0ZXpxeWVxdkNMbElGcVllUzRJQU5pWEV6b3RsCjlnb3VSTDBNcWJwUEUveWRBZ01CQUFHalZqQlVNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUsKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkFFS1VkY1lYQWNvWWo4UApWVHVSWTlWUlRZOEtNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJkVnZ0TnBPb2ZGZ2xkOE5FZ2lyYTV4U1FzCmxBNk1GNE5WT3g4OGV5dnVTcnVtek1VeXRKQWRxRFpiT3B3ZllwVkhIRkpna2lUd0JYM3FEMDA4VC9xM3dUbFoKdGJ5SEpSdWNrUXRPWVZ1b1EzM0NqM0luQ0FKMWRSb0lMMVVzWm9sWmVzYXlsbFBOaUJJRUlMZUI1ZmhKSDc2aQpOWTdvZThDeVlKR0RIZHN0Y0xtNkVKeXprRjQxbTBWaElZRmZGQjNvTlBrQ3gzWHYySWYwOUtKbEMyOHJuNkcvCkYzczNiaXRMV2o4YTg0QzJKbVJ5WXlJNGMrUWx3UThWT294OFJ4WlJJNDIvWUtnOCtsbXkycmNFTHlHTWZrcGQKVk1TMmtxL20zRlRyQjNSNFB4SHZKSWxZeDdCdXlhanl3N1M4S0MrdlpaUWVRcUt3Nk1vdGNwd2VJM2RpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdEZQTlpqczRkeHIxTHJvYUdzMGdLb1JuR1hrZG5MVGlBOGMzUlN4TDNqZTgzNjJVCnhUZTV4clhsYWxJRW42STFMakZjbWtyR1k0eFpaUElXRnNxM1gxelpoTW9oRVcyaVk0eFFXQVFIWDhxb2RsU0YKZENscTJiM1RzMTVwZ1FYd0xmSWlta09ZWG5QTzEzeUF4VHp2S2R2Qjk5VWh3dnJWMmpKWlMxaEdtalR5WmJleApCMmIyeWhyMktJWmk2cnhxaWNoWFh5S1NselI0bW41NGQwbzduRjduVGNhS1d6N3RXdVQ4T1BvaDZlb0pqUkgzClB3L21aSjQ5T05MbUh6dWtJdWVEekxtV3NRN2t3Ky9xQjduZktNaUF4YjZDeWtpSUt2blJxMTR5L09IczZzbnEKcndpNVNCYW1Ia3VDQURZbHhNNkxaZllLTGtTOURLbTZUeFA4blFJREFRQUJBb0lCQUJ1ZjdlcWdIbCtTcStaWApZS25qN0M1UFA3c1ZoSTJONFVUcVp5TnI3SWh6bWZYYk1kdi9sREJtaTZsY3ZMUVd4WlpZdmdLdCsxUGpPNHVkCkVYaTIzOTRXUzRWTjhNQnFmdkxJbTBOTWhMT3VTRjN1UjA1N0RORWtCVE1vZnJtakJ2OEc1Ym1qcXNzbmF4TzAKVVViRjlhNkFLYWdWaUxsRnMyNmNnWFRySmsrM2xHQmt2ck1FQjZmellBSkN3UzZQdXVJR2FCUDdxQURVUG5acQpRMVdrMDVGSXpJUUVDRzdvY21YTDF1YkdTbHNDaloyaGFhaVQ4anpYY01SbEJCN3Rha2F4bU9UcktZQ0M4bWVnCk16WmRDakh4ek1zeHBvTWozR1pVN2hUdUM5N1c0R2V2Tm05N1J4TGlOM1VYYUt1T1VGdlk4TU90ZXQ0dTcrRTIKblNsbHNPRUNnWUVBMEFNaUtjZ2pacFdlVmZGRDI5VFU2L2tCY3I5Y0FTSmppZnRhYklnTjhWcUMvM0lJTm51ZQpnZTdnOUN4by9MeHJXZHFiLzNIUkVnZDZGM0RsKytKN0NrRlFLQnRQclRYSEgvUW5zTExURVVqcmNCd3JOWWt0CnRnSk1nQmNkMm1Fd2JFM0VzaTdWaTlvYXBGY3FybllnTHNuNUY5NG1jKzhzKy81bTk2K0NPdUVDZ1lFQTNlMmsKNjdZbFAxWXAwZTJxQUt5Vm1iMlcvQis2Ym1JZ0xrdElZM2xHVVlKQXU0QjRSeHpzREJPSktVTzQxa0J5OWNuSApVZ1hGODVsRTBrSUxRZ3NYdzFVMk1YK3RXNlFVV0xiMDNxME00b3FneVY1TVoyYnlyMSt6ZVBDWkNSWlNvb1RFCnA3T29PS0F6OUh3MTB2eFcyU1lQSWZ1YlU0WnNnTzNkYTBpbmxUMENnWUJSN0ZvQklKeW9vMWFIdkl5Z1FMTlcKK0d2VW1IOFF4MDF5bzNiYWRiOGdCaWkvbUZhWnRwZ1h6ay8wZXFVaW5NYWV6ZFZRaHEvenJOUXQ5VDN1dFNVRwpSZkRleXRyWGVlMmhyUlFRcUcwdVNvekhTNkRNNWVrRjNPUHFNckNFT0hETXh0Z240UUFqbzFPSTAvZXdYRCtTCmplTTN2anRndjVyMDZCMy9nTFVHb1FLQmdRQ3NXeTRrYWhmUGNzbVQ0bktQaDNuQUp3QWwyelpkR0JSS0grbWUKWjhkMjhpUDMrelJ1ZGtYVXN5OXBQdEZFaEZWRUVtdWNoaU5RcHc1T0JVRGREK1JxcmJrakJEZk0za2QzQnRCeQpTQStqdVdwYU9jUTQ0amxFZnB6U0pubVVGeVFpVjk2cko5cFQ4QWVwcnZYV1lHZkt5Y1lpN0ZlYnJPQ0QyVGlIClk2dlRPUUtCZ0M0N1dEUFUvNklWVTY1TXA2bWpKTUgzUFpaeG03UG5aNXJlc0ZjNUFJK0tpVHgrZGFrRXc1b00KOWVTV0YrVVgvV1cvMXhmNmhlaWdXZ3dXWU51dGtqMGtpa1BGajZVWTYzcTk4MWpUQXFUVVprSEJMWHJwK3A3ego1LzkwYkd1N1RBK1lEU25ZTDl3SXhja0lMOFdxSkNPbXVTNGxPbGFidFJLNi9EL3dscldqCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\n",
            "kubeconfig_path": "/home/kotkokos/.kube/config-prod",
            "name": "demo-clicker-cluster-prod",
            "node_image": null,
            "timeouts": null,
            "wait_for_ready": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "demo-clicker-prod/demo-clicker-deployment-prod",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 5,
                "labels": {},
                "name": "demo-clicker-deployment-prod",
                "namespace": "demo-clicker-prod",
                "resource_version": "3508",
                "uid": "1cc2a5eb-24f6-4bb4-ac93-9fc51fad4295"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "4",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "demo-clicker-prod"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "demo-clicker-prod",
                          "environment": "prod"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "MANAGEMENT_SERVER_PORT",
                                "value": "8081",
                                "value_from": []
                              },
                              {
                                "name": "MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE",
                                "value": "health",
                                "value_from": []
                              },
                              {
                                "name": "MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS",
                                "value": "never",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "demo-clicker:prod",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/actuator/health",
                                    "port": "8081",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 30,
                                "period_seconds": 30,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "name": "demo-clicker",
                            "port": [
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "http",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 8081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "management",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/actuator/health",
                                    "port": "8081",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 5,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "500m",
                                  "memory": "1Gi"
                                },
                                "requests": {
                                  "cpu": "100m",
                                  "memory": "512Mi"
                                }
                              }
                            ],
                            "security_context": [
                              {
                                "allow_privilege_escalation": false,
                                "capabilities": [],
                                "privileged": false,
                                "read_only_root_filesystem": false,
                                "run_as_group": "",
                                "run_as_non_root": true,
                                "run_as_user": "",
                                "se_linux_options": [],
                                "seccomp_profile": []
                              }
                            ],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "demo-clicker-prod/demo-clicker-ingress-prod",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "demo-clicker-ingress-prod",
                "namespace": "demo-clicker-prod",
                "resource_version": "840",
                "uid": "57b8ed10-8a2b-44a9-ba93-d19ead2f51d0"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "prod.localhost",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "demo-clicker-prod",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 80
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/",
                            "path_type": "Prefix"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "localhost",
                        "ip": ""
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "demo-clicker-prod",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "demo-clicker-prod",
                "resource_version": "670",
                "uid": "5c3b6bb8-ba30-4a22-b724-90fa770e6aa8"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "demo-clicker-prod/demo-clicker-prod",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "demo-clicker-prod",
                "namespace": "demo-clicker-prod",
                "resource_version": "682",
                "uid": "b0328cf3-8f51-4054-8990-7e761cff8103"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.96.84.111",
                "cluster_ips": [
                  "10.96.84.111"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "http",
                    "node_port": 0,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "8080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "demo-clicker-prod"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "management",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "demo-clicker-prod/demo-clicker-management-prod",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "demo-clicker-management-prod",
                "namespace": "demo-clicker-prod",
                "resource_version": "678",
                "uid": "c8b80a38-99ec-4d53-9b93-f7ab03cff2af"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.96.198.211",
                "cluster_ips": [
                  "10.96.198.211"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "management",
                    "node_port": 0,
                    "port": 8081,
                    "protocol": "TCP",
                    "target_port": "8081"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "demo-clicker-prod"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "load_docker_image",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "7776928843970847952",
            "triggers": {
              "cluster_id": "demo-clicker-cluster-prod-",
              "image_tag": "prod"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "kind_cluster.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "wait_for_ingress_nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "8286846348348845818",
            "triggers": {
              "key": "f6dde014-acbf-3451-1cf9-ea29faaa7a1d"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
