{
  "version": 4,
  "terraform_version": "1.12.1",
  "serial": 157,
  "lineage": "e79e3040-f2f5-b60f-ac19-f8a4dacbb054",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "ingress_nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress-nginx-dev",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.12.2",
                "chart": "ingress-nginx",
                "first_deployed": 1748295811,
                "last_deployed": 1748295811,
                "name": "ingress-nginx-dev",
                "namespace": "ingress-nginx-dev",
                "notes": "The ingress-nginx controller has been installed.\nGet the application URL by running these commands:\n  export HTTP_NODE_PORT=$(kubectl get service --namespace ingress-nginx-dev ingress-nginx-dev-controller --output jsonpath=\"{.spec.ports[0].nodePort}\")\n  export HTTPS_NODE_PORT=$(kubectl get service --namespace ingress-nginx-dev ingress-nginx-dev-controller --output jsonpath=\"{.spec.ports[1].nodePort}\")\n  export NODE_IP=\"$(kubectl get nodes --output jsonpath=\"{.items[0].status.addresses[1].address}\")\"\n\n  echo \"Visit http://${NODE_IP}:${HTTP_NODE_PORT} to access your application via HTTP.\"\n  echo \"Visit https://${NODE_IP}:${HTTPS_NODE_PORT} to access your application via HTTPS.\"\n\nAn example Ingress that makes use of the controller:\n  apiVersion: networking.k8s.io/v1\n  kind: Ingress\n  metadata:\n    name: example\n    namespace: foo\n  spec:\n    ingressClassName: nginx\n    rules:\n      - host: www.example.com\n        http:\n          paths:\n            - pathType: Prefix\n              backend:\n                service:\n                  name: exampleService\n                  port:\n                    number: 80\n              path: /\n    # This section is only required if TLS is to be enabled for the Ingress\n    tls:\n      - hosts:\n        - www.example.com\n        secretName: example-tls\n\nIf TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:\n\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: example-tls\n    namespace: foo\n  data:\n    tls.crt: \u003cbase64 encoded cert\u003e\n    tls.key: \u003cbase64 encoded key\u003e\n  type: kubernetes.io/tls\n",
                "revision": 1,
                "values": "{\"controller\":{\"admissionWebhooks\":{\"enabled\":false},\"extraArgs\":{\"publish-status-address\":\"localhost\"},\"hostPort\":{\"enabled\":true},\"nodeSelector\":{\"ingress-ready\":\"true\"},\"publishService\":{\"enabled\":false},\"service\":{\"type\":\"NodePort\"},\"terminationGracePeriodSeconds\":0,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\",\"operator\":\"Equal\"}],\"watchIngressWithoutClass\":true}}",
                "version": "4.12.2"
              }
            ],
            "name": "ingress-nginx-dev",
            "namespace": "ingress-nginx-dev",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# nginx_ingress_values.yaml\n\ncontroller:\n  hostPort:\n    enabled: true\n  terminationGracePeriodSeconds: 0\n  service:\n    type: \"NodePort\"\n  watchIngressWithoutClass: true\n  nodeSelector:\n    ingress-ready: \"true\"\n  tolerations:\n  - effect: \"NoSchedule\"\n    key: \"node-role.kubernetes.io/master\"\n    operator: \"Equal\"\n  - effect: \"NoSchedule\"\n    key: \"node-role.kubernetes.io/control-plane\"\n    operator: \"Equal\"\n  publishService:\n    enabled: false\n  extraArgs:\n    publish-status-address: \"localhost\"\n  admissionWebhooks:\n    enabled: false\n"
            ],
            "verify": false,
            "version": "4.12.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kind_cluster.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kind_cluster",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/tehcyx/kind\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_certificate": "-----BEGIN CERTIFICATE-----\nMIIDKTCCAhGgAwIBAgIIcyayGww7lyAwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA1MjYyMTM3MzBaFw0yNjA1MjYyMTQyMzBaMDwx\nHzAdBgNVBAoTFmt1YmVhZG06Y2x1c3Rlci1hZG1pbnMxGTAXBgNVBAMTEGt1YmVy\nbmV0ZXMtYWRtaW4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCcZAV8\nWw4gx09Nfgw2646pNCIVNEFtw75Mu4gdE9qZxQgG1XOofj6dXzcVFDMGPnnNcaff\n8LKKgG+N+2fX8rp2UZCrCqhowBGvzHl5y7FwtFwc72C4NhY4b8C72O9GbSK4k+Sx\nNBNFrtH2Gx/NOXr7IR5I44Q0OLKDFqiqsoNuXTdcqQBz0gRh+a1uy1P4rAgIajwP\nP2VJOfPo3msgo+92xXvbbuNjAfHa8G4PXPCFJ9JYnTYYZFsASLcA22HYQVYAyNLY\nIMNQlwPuC5zTtpQo/EyoOR0FFiA/8SMhVyrAFoCe5Wa1gu6iISZm8nHQyey+jv0S\n0wWNXdToTbSftubZAgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAK\nBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFG0zhcRWzNioljDO\neCOfvEduWU62MA0GCSqGSIb3DQEBCwUAA4IBAQAqpVzkC3aZUPmmJYagHrNY+r96\nTNMYlp0tyqDqSU3tcgWthIlFYADc52Gagp6FIKKnunZkpBEWz2uQK5lX+Lv/Mfou\nXf3igsi27QIDNzQoXF+QW/CvEiR/YdPgOLirFKSd4jyA2aae24u0a3y4JUwi+hqg\nvaVs59wpjxU1ABZB9ylhpl5xpqIu8jVu9TKapD4advVTacRZM/CwHN7jHLBr5hUP\nrhLiqWUcXuN5XdeBo8bc1QZzUfxs/9QGaFP4whWhFL7SHp4s849yWeMqZIX5fdpF\neGyGl6x5sVgvPXuACOhLaCqp29A1XRYzFVeaMUXj/eBJhz2GB59gEx/iQUXd\n-----END CERTIFICATE-----\n",
            "client_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAnGQFfFsOIMdPTX4MNuuOqTQiFTRBbcO+TLuIHRPamcUIBtVz\nqH4+nV83FRQzBj55zXGn3/CyioBvjftn1/K6dlGQqwqoaMARr8x5ecuxcLRcHO9g\nuDYWOG/Au9jvRm0iuJPksTQTRa7R9hsfzTl6+yEeSOOENDiygxaoqrKDbl03XKkA\nc9IEYfmtbstT+KwICGo8Dz9lSTnz6N5rIKPvdsV7227jYwHx2vBuD1zwhSfSWJ02\nGGRbAEi3ANth2EFWAMjS2CDDUJcD7guc07aUKPxMqDkdBRYgP/EjIVcqwBaAnuVm\ntYLuoiEmZvJx0Mnsvo79EtMFjV3U6E20n7bm2QIDAQABAoIBACH2NprCy1ai8b3K\nWayzis+D2sLwDiVgFLtlHjHyVc5+0zdosy0r/Tz/qF6TfGEmwBy1Sdd/1cXuDkuv\nBOYIeCWpoNkD/35/91dN+DNS4L2w7S/7a+2VEU5ANoKUoaGRobCjrU4uGOFRDZd8\nXHOcv/A5SPJbNiKBDYMaMJahHZmhnajGeFUi4qTn6FEh8TyPyAJkM51d/NFndxuK\nzJvsPLz85lGLH/GE+f423rhHVgcgJuZSOAY0rBbBajtcXv4VYajEJma1IqvURH1W\nlXcqt5aZ3khkHwm6auNCEcNKHxF7y2xNDzaFd6VuLOO3YYZfRVz9kEmKPc0YrTwj\na6SGIuECgYEAzrxe5AyJATx7bgCX5PibmfBOJRxIrm3QE2ucqa431i3q2LoD5jlw\nIoMajZ2e9G8EidtVqqciJIBhoNjhFwE/WzBO+eTYIyG7eTtVCEZP8lNRP0f7LZbG\nneYUpp93CYFDPg+OzvNrAIfMlnrkt+AZHRdoJfoJlyks9SKY9ln+Oe8CgYEAwahq\n5oUDzMFvnqydA61NgXtTYi5dtUj9OO8xNE2RgEuz3k1II1tFVdVNOdJ6howGidkR\nd7hnutOysFULOvdzYN+f/whfoAWTurtvliz74UVz/oN0VxQO9V6qLLCS0AU2m30y\nsr9GcW6yDmCJYxB6fkWtlKFyht3Qj/bojTP9U7cCgYAAjVI3i60F+tJdjdTaAKvx\nskmTIcsz5AktNBlb/qIZiU/aOkzuXXLmNLFqdWRKRM2fTJ2i8gVOUaVxF4MqW49+\nv9dGJY1KMrncbgMhHYbzH7PU1m1eRsvK+iVN+JkJxnWWgdYgyVeczcAHGtbngsqu\nYDSf/VXvOGXtVaVQ6xaZswKBgENDZxX4P3CgA0/+rm63hAMkPbsNVbkAyAs9cT60\nboQ8RxZAi3zUV8nPU4pw4+PVwPOiNKH7p/PJUfhTIZpyll2gbqcbVnNzXHNwZPqp\nVzdQc1CEgiU4r1VkcwEgt22PUf9Bxhk1vJbrlubNewqwj4tKUlccmHXll2pZnT5m\nP2gTAoGBALs0+HQJ49Z6EiyU+yw4ug2Upoah5hzgnUxnh2oRt60XiSCLG5LGWDcb\nnixve3+wxYjncGKS+6OHNoStFfErsFQEpzvoLG/xLOpWbFrRJPRKircQyLl9/2Xr\nwdiLMpgkvijyIbl81xs6FGgv0h7Jgzcs7WFoexTGG+NyMywnkB4e\n-----END RSA PRIVATE KEY-----\n",
            "cluster_ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIICOHRLn5C/0owDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA1MjYyMTM3MzBaFw0zNTA1MjQyMTQyMzBaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQC8wCYR3cu0TyIYYiBTv+SCUUklH8qTUxe7lQzWLxEM2X66kHOgNT/H/4k5\nz0KA8z69EXcJz4+in4/LSiA9r8CRX7xcNAg+xsTkmI6pYRLR2/Q95Ydctgbm7DGC\npJONULzpL49WO8vMuzOu47Z88UI+5GvEpXwCeL+jNZzvFvBbb40x2zp+G3nZ1PBf\nfCQmdH14bKLEg+SWhaF70MQ/mJV733dODi094b3dasM51i0a/VQ2RDr71ODvM5qx\n6z4HVgYniFyPUCHaXE1/jvcVvTH3GCkmqUoXyI0xy9LK0EpfJ6hmWx8fPNgoyRuM\nrBjQMr/Wdp6ryM4CfyBSUq25QsEfAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRtM4XEVszYqJYwzngjn7xHbllOtjAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAMQ9Y/ie8p\nbRcxBt/oPshMxkq36m2IxJKHBRTJ3AuUXLlkoZPHjC2PCxJNu2AKS6dLE66fp69j\nAH7IdZBZ8rmX6dOzJNKiuCUCCeH2gZ4bPp8FTlKpoXgXnq4ESVyhykORQVJMTDRt\n75ZWQtML+b4MgJ0SV831wpxAO4v86BCkf59Y9+b/dyASy5x/uZtixh0lQ1MtVfpH\naYJplpHEVqFstsl4+D2zJidwpuAuSa36Sg4KBXwgkO2c0NhA6GMxlb2lVp43Wk9V\nBL6gUwuPWuDZyNwnaWu/ah6dVjUzvcd5/8CtxNzLLyzNRHjY7Z78ewL1A7uM2jP8\nVJKP0QvuMTHV\n-----END CERTIFICATE-----\n",
            "completed": true,
            "endpoint": "https://127.0.0.1:36453",
            "id": "demo-clicker-cluster-dev-",
            "kind_config": [
              {
                "api_version": "kind.x-k8s.io/v1alpha4",
                "containerd_config_patches": [],
                "feature_gates": {},
                "kind": "Cluster",
                "networking": [],
                "node": [
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [
                      {
                        "container_port": 80,
                        "host_port": 7080,
                        "listen_address": "",
                        "protocol": ""
                      },
                      {
                        "container_port": 443,
                        "host_port": 7443,
                        "listen_address": "",
                        "protocol": ""
                      }
                    ],
                    "image": "",
                    "kubeadm_config_patches": [
                      "kind: InitConfiguration\nnodeRegistration:\n  kubeletExtraArgs:\n    node-labels: \"ingress-ready=true\"\n"
                    ],
                    "labels": {},
                    "role": "control-plane"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": [],
                    "labels": {},
                    "role": "worker"
                  }
                ],
                "runtime_config": {}
              }
            ],
            "kubeconfig": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQ09IUkxuNUMvMG93RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMU1qWXlNVE0zTXpCYUZ3MHpOVEExTWpReU1UUXlNekJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM4d0NZUjNjdTBUeUlZWWlCVHYrU0NVVWtsSDhxVFV4ZTdsUXpXTHhFTTJYNjZrSE9nTlQvSC80azUKejBLQTh6NjlFWGNKejQraW40L0xTaUE5cjhDUlg3eGNOQWcreHNUa21JNnBZUkxSMi9ROTVZZGN0Z2JtN0RHQwpwSk9OVUx6cEw0OVdPOHZNdXpPdTQ3Wjg4VUkrNUd2RXBYd0NlTCtqTlp6dkZ2QmJiNDB4MnpwK0czbloxUEJmCmZDUW1kSDE0YktMRWcrU1doYUY3ME1RL21KVjczM2RPRGkwOTRiM2Rhc001MWkwYS9WUTJSRHI3MU9Edk01cXgKNno0SFZnWW5pRnlQVUNIYVhFMS9qdmNWdlRIM0dDa21xVW9YeUkweHk5TEswRXBmSjZobVd4OGZQTmdveVJ1TQpyQmpRTXIvV2RwNnJ5TTRDZnlCU1VxMjVRc0VmQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSdE00WEVWc3pZcUpZd3puZ2puN3hIYmxsT3RqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQU1ROVkvaWU4cApiUmN4QnQvb1BzaE14a3EzNm0ySXhKS0hCUlRKM0F1VVhMbGtvWlBIakMyUEN4Sk51MkFLUzZkTEU2NmZwNjlqCkFIN0lkWkJaOHJtWDZkT3pKTktpdUNVQ0NlSDJnWjRiUHA4RlRsS3BvWGdYbnE0RVNWeWh5a09SUVZKTVREUnQKNzVaV1F0TUwrYjRNZ0owU1Y4MzF3cHhBTzR2ODZCQ2tmNTlZOStiL2R5QVN5NXgvdVp0aXhoMGxRMU10VmZwSAphWUpwbHBIRVZxRnN0c2w0K0QyekppZHdwdUF1U2EzNlNnNEtCWHdna08yYzBOaEE2R014bGIybFZwNDNXazlWCkJMNmdVd3VQV3VEWnlOd25hV3UvYWg2ZFZqVXp2Y2Q1LzhDdHhOekxMeXpOUkhqWTdaNzhld0wxQTd1TTJqUDgKVkpLUDBRdnVNVEhWCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://127.0.0.1:36453\n  name: kind-demo-clicker-cluster-dev\ncontexts:\n- context:\n    cluster: kind-demo-clicker-cluster-dev\n    user: kind-demo-clicker-cluster-dev\n  name: kind-demo-clicker-cluster-dev\ncurrent-context: kind-demo-clicker-cluster-dev\nkind: Config\npreferences: {}\nusers:\n- name: kind-demo-clicker-cluster-dev\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJY3lheUd3dzdseUF3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMU1qWXlNVE0zTXpCYUZ3MHlOakExTWpZeU1UUXlNekJhTUR3eApIekFkQmdOVkJBb1RGbXQxWW1WaFpHMDZZMngxYzNSbGNpMWhaRzFwYm5NeEdUQVhCZ05WQkFNVEVHdDFZbVZ5CmJtVjBaWE10WVdSdGFXNHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDY1pBVjgKV3c0Z3gwOU5mZ3cyNjQ2cE5DSVZORUZ0dzc1TXU0Z2RFOXFaeFFnRzFYT29majZkWHpjVkZETUdQbm5OY2FmZgo4TEtLZ0crTisyZlg4cnAyVVpDckNxaG93Qkd2ekhsNXk3Rnd0RndjNzJDNE5oWTRiOEM3Mk85R2JTSzRrK1N4Ck5CTkZydEgyR3gvTk9YcjdJUjVJNDRRME9MS0RGcWlxc29OdVhUZGNxUUJ6MGdSaCthMXV5MVA0ckFnSWFqd1AKUDJWSk9mUG8zbXNnbys5MnhYdmJidU5qQWZIYThHNFBYUENGSjlKWW5UWVlaRnNBU0xjQTIySFlRVllBeU5MWQpJTU5RbHdQdUM1elR0cFFvL0V5b09SMEZGaUEvOFNNaFZ5ckFGb0NlNVdhMWd1NmlJU1ptOG5IUXlleStqdjBTCjB3V05YZFRvVGJTZnR1YlpBZ01CQUFHalZqQlVNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUsKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkcwemhjUld6TmlvbGpETwplQ09mdkVkdVdVNjJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFxcFZ6a0MzYVpVUG1tSllhZ0hyTlkrcjk2ClROTVlscDB0eXFEcVNVM3RjZ1d0aElsRllBRGM1MkdhZ3A2RklLS251blprcEJFV3oydVFLNWxYK0x2L01mb3UKWGYzaWdzaTI3UUlETnpRb1hGK1FXL0N2RWlSL1lkUGdPTGlyRktTZDRqeUEyYWFlMjR1MGEzeTRKVXdpK2hxZwp2YVZzNTl3cGp4VTFBQlpCOXlsaHBsNXhwcUl1OGpWdTlUS2FwRDRhZHZWVGFjUlpNL0N3SE43akhMQnI1aFVQCnJoTGlxV1VjWHVONVhkZUJvOGJjMVFaelVmeHMvOVFHYUZQNHdoV2hGTDdTSHA0czg0OXlXZU1xWklYNWZkcEYKZUd5R2w2eDVzVmd2UFh1QUNPaExhQ3FwMjlBMVhSWXpGVmVhTVVYai9lQkpoejJHQjU5Z0V4L2lRVVhkCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbkdRRmZGc09JTWRQVFg0TU51dU9xVFFpRlRSQmJjTytUTHVJSFJQYW1jVUlCdFZ6CnFINCtuVjgzRlJRekJqNTV6WEduMy9DeWlvQnZqZnRuMS9LNmRsR1Fxd3FvYU1BUnI4eDVlY3V4Y0xSY0hPOWcKdURZV09HL0F1OWp2Um0waXVKUGtzVFFUUmE3Ujloc2Z6VGw2K3lFZVNPT0VORGl5Z3hhb3FyS0RibDAzWEtrQQpjOUlFWWZtdGJzdFQrS3dJQ0dvOER6OWxTVG56Nk41cklLUHZkc1Y3MjI3all3SHgydkJ1RDF6d2hTZlNXSjAyCkdHUmJBRWkzQU50aDJFRldBTWpTMkNERFVKY0Q3Z3VjMDdhVUtQeE1xRGtkQlJZZ1AvRWpJVmNxd0JhQW51Vm0KdFlMdW9pRW1adkp4ME1uc3ZvNzlFdE1GalYzVTZFMjBuN2JtMlFJREFRQUJBb0lCQUNIMk5wckN5MWFpOGIzSwpXYXl6aXMrRDJzTHdEaVZnRkx0bEhqSHlWYzUrMHpkb3N5MHIvVHovcUY2VGZHRW13QnkxU2RkLzFjWHVEa3V2CkJPWUllQ1dwb05rRC8zNS85MWROK0ROUzRMMnc3Uy83YSsyVkVVNUFOb0tVb2FHUm9iQ2pyVTR1R09GUkRaZDgKWEhPY3YvQTVTUEpiTmlLQkRZTWFNSmFoSFptaG5hakdlRlVpNHFUbjZGRWg4VHlQeUFKa001MWQvTkZuZHh1Swp6SnZzUEx6ODVsR0xIL0dFK2Y0MjNyaEhWZ2NnSnVaU09BWTByQmJCYWp0Y1h2NFZZYWpFSm1hMUlxdlVSSDFXCmxYY3F0NWFaM2toa0h3bTZhdU5DRWNOS0h4Rjd5MnhORHphRmQ2VnVMT08zWVlaZlJWejlrRW1LUGMwWXJUd2oKYTZTR0l1RUNnWUVBenJ4ZTVBeUpBVHg3YmdDWDVQaWJtZkJPSlJ4SXJtM1FFMnVjcWE0MzFpM3EyTG9ENWpsdwpJb01haloyZTlHOEVpZHRWcXFjaUpJQmhvTmpoRndFL1d6Qk8rZVRZSXlHN2VUdFZDRVpQOGxOUlAwZjdMWmJHCm5lWVVwcDkzQ1lGRFBnK096dk5yQUlmTWxucmt0K0FaSFJkb0pmb0pseWtzOVNLWTlsbitPZThDZ1lFQXdhaHEKNW9VRHpNRnZucXlkQTYxTmdYdFRZaTVkdFVqOU9POHhORTJSZ0V1ejNrMUlJMXRGVmRWTk9kSjZob3dHaWRrUgpkN2hudXRPeXNGVUxPdmR6WU4rZi93aGZvQVdUdXJ0dmxpejc0VVZ6L29OMFZ4UU85VjZxTExDUzBBVTJtMzB5CnNyOUdjVzZ5RG1DSll4QjZma1d0bEtGeWh0M1FqL2JvalRQOVU3Y0NnWUFBalZJM2k2MEYrdEpkamRUYUFLdngKc2ttVEljc3o1QWt0TkJsYi9xSVppVS9hT2t6dVhYTG1OTEZxZFdSS1JNMmZUSjJpOGdWT1VhVnhGNE1xVzQ5Kwp2OWRHSlkxS01ybmNiZ01oSFliekg3UFUxbTFlUnN2SytpVk4rSmtKeG5XV2dkWWd5VmVjemNBSEd0Ym5nc3F1CllEU2YvVlh2T0dYdFZhVlE2eGFac3dLQmdFTkRaeFg0UDNDZ0EwLytybTYzaEFNa1Bic05WYmtBeUFzOWNUNjAKYm9ROFJ4WkFpM3pVVjhuUFU0cHc0K1BWd1BPaU5LSDdwL1BKVWZoVElacHlsbDJnYnFjYlZuTnpYSE53WlBxcApWemRRYzFDRWdpVTRyMVZrY3dFZ3QyMlBVZjlCeGhrMXZKYnJsdWJOZXdxd2o0dEtVbGNjbUhYbGwycFpuVDVtClAyZ1RBb0dCQUxzMCtIUUo0OVo2RWl5VSt5dzR1ZzJVcG9haDVoemduVXhuaDJvUnQ2MFhpU0NMRzVMR1dEY2IKbml4dmUzK3d4WWpuY0dLUys2T0hOb1N0RmZFcnNGUUVwenZvTEcveExPcFdiRnJSSlBSS2lyY1F5TGw5LzJYcgp3ZGlMTXBna3ZpanlJYmw4MXhzNkZHZ3YwaDdKZ3pjczdXRm9leFRHRytOeU15d25rQjRlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\n",
            "kubeconfig_path": "/home/kotkokos/.kube/config-dev",
            "name": "demo-clicker-cluster-dev",
            "node_image": null,
            "timeouts": null,
            "wait_for_ready": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "demo-clicker-dev/demo-clicker-deployment-dev",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": null,
                "name": "demo-clicker-deployment-dev",
                "namespace": "demo-clicker-dev",
                "resource_version": "1281",
                "uid": "36861d09-b142-4b69-9e6d-d20e9cd10758"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "demo-clicker-dev"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "demo-clicker-dev",
                          "environment": "dev"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": null,
                            "env": [
                              {
                                "name": "MANAGEMENT_SERVER_PORT",
                                "value": "8081",
                                "value_from": []
                              },
                              {
                                "name": "MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE",
                                "value": "health",
                                "value_from": []
                              },
                              {
                                "name": "MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS",
                                "value": "never",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "demo-clicker:dev",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/actuator/health",
                                    "port": "8081",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 30,
                                "period_seconds": 30,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "name": "demo-clicker",
                            "port": [
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "http",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 8081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "management",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/actuator/health",
                                    "port": "8081",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 5,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "200m",
                                  "memory": "1Gi"
                                },
                                "requests": {
                                  "cpu": "100m",
                                  "memory": "512Mi"
                                }
                              }
                            ],
                            "security_context": [
                              {
                                "allow_privilege_escalation": false,
                                "capabilities": [],
                                "privileged": false,
                                "read_only_root_filesystem": false,
                                "run_as_group": "",
                                "run_as_non_root": true,
                                "run_as_user": "",
                                "se_linux_options": [],
                                "seccomp_profile": []
                              }
                            ],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "demo-clicker-dev/demo-clicker-ingress-dev",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": null,
                "name": "demo-clicker-ingress-dev",
                "namespace": "demo-clicker-dev",
                "resource_version": "677",
                "uid": "b0b87911-415c-4d9c-b323-9b789be64b59"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "dev.localhost",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "demo-clicker-dev",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 80
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/",
                            "path_type": "Prefix"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "demo-clicker-dev",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "demo-clicker-dev",
                "resource_version": "673",
                "uid": "7d4e6f3c-bd7a-4aeb-9363-56022d0ae1a7"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "demo-clicker-dev/demo-clicker-dev",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "demo-clicker-dev",
                "namespace": "demo-clicker-dev",
                "resource_version": "686",
                "uid": "e9f88252-57c8-412d-9fd1-b4d51565711f"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.96.123.180",
                "cluster_ips": [
                  "10.96.123.180"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "http",
                    "node_port": 0,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "8080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "demo-clicker-dev"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "management",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "demo-clicker-dev/demo-clicker-management-dev",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "demo-clicker-management-dev",
                "namespace": "demo-clicker-dev",
                "resource_version": "682",
                "uid": "40a40486-1376-4443-bb64-ee6adb0b4c9b"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.96.177.57",
                "cluster_ips": [
                  "10.96.177.57"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "management",
                    "node_port": 0,
                    "port": 8081,
                    "protocol": "TCP",
                    "target_port": "8081"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "demo-clicker-dev"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default",
            "kubernetes_namespace.app",
            "null_resource.load_docker_image",
            "null_resource.wait_for_ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "load_docker_image",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "5658891067831478811",
            "triggers": {
              "cluster_id": "demo-clicker-cluster-dev-",
              "image_tag": "dev"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "kind_cluster.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "wait_for_ingress_nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "5822183086154523925",
            "triggers": {
              "key": "08e16a18-1d45-0135-8b0d-7404f60c2528"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "helm_release.ingress_nginx",
            "kind_cluster.default"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
